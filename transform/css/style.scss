* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    width: 100%;
    height: 100vh;
    background-color: #1a1a1a;
    display: flex;
    justify-content: center;
    align-items: center;

    perspective: 200px; // needs perspective in the parent to use transform 3d
}

.parent {
    width: 100px;
    height: 100px;
    background-color: #ccc;
    border-radius: 16px;

    perspective: 200px;
    transform: rotateY(50deg);

    transform-style: preserve-3d;
}

.box {
    width: 100px;
    height: 100px;
    background-color: lightgreen;
    border-radius: 16px;

    // 1 => basic transform proprieties (axis x, y, z)
    // transform: rotate(50deg);
    // transform: translate(50px, -10px); // movement, change position
    // transform: scale(1.5); 
    // transform: skew(20deg, 20deg); // change shape

    // 2 => transform 3d + perspective
    // perspective is always applied to the parent element
    // transform: rotateX(50deg);

    // 3 => transform origin
    /*transform: rotate(20deg);
    transform-origin: 0% 0%;
    transition: all 0.5s ease;
    &:hover {
        transform: rotate(180deg);
    }*/

    // 4 => transform style
    transform: rotateX(60deg);

}